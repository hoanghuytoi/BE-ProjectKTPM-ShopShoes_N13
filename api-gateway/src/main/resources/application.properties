spring.application.name=api-gateway
server.port=8080

# Common Configuration
# Service Connection Timeouts
spring.cloud.gateway.httpclient.connect-timeout=2000
spring.cloud.gateway.httpclient.response-timeout=5000

# Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.default.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.default.wait-duration-in-open-state=5000
resilience4j.circuitbreaker.instances.default.sliding-window-size=10
resilience4j.circuitbreaker.instances.default.sliding-window-type=COUNT_BASED

# Redis Configuration
spring.redis.host=redis
spring.redis.port=6379

# Rate Limiter Configuration
spring.cloud.gateway.filter.ratelimit.enabled=true
spring.cloud.gateway.filter.ratelimit.redis-rate-limiter.replenish-rate=1
spring.cloud.gateway.filter.ratelimit.redis-rate-limiter.burst-capacity=1
spring.cloud.gateway.filter.ratelimit.redis-rate-limiter.requested-tokens=1
spring.cloud.gateway.filter.ratelimit.redis-rate-limiter.include-headers-for-limit-key=X-Forwarded-For,Authorization

# Actuator Configuration
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Common Logging Configuration
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty.http.client=DEBUG

# Common Eureka Client Configuration
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.instance.prefer-ip-address=true
# Common Eureka Client Resilience Settings
eureka.instance.lease-renewal-interval-in-seconds=5
eureka.instance.lease-expiration-duration-in-seconds=15
eureka.client.registry-fetch-interval-seconds=5

# Health Configuration 
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Default profile (local development)
spring.config.activate.on-profile=default
# Eureka Client Configuration - Local
eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://PRODUCT-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/products/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[1].id=cart-service
spring.cloud.gateway.routes[1].uri=lb://CART-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/carts/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[2].id=auth-service
spring.cloud.gateway.routes[2].uri=lb://AUTH-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/auth/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[3].id=invoice-service
spring.cloud.gateway.routes[3].uri=lb://INVOICE-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/v1/invoices/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[4].id=payment-service
spring.cloud.gateway.routes[4].uri=lb://PAYMENT-SERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/v1/payments/**
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[5].id=email-service
spring.cloud.gateway.routes[5].uri=lb://EMAIL-SERVICE
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/email/**
spring.cloud.gateway.routes[5].filters[0]=StripPrefix=1
