services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456789
      MYSQL_USER: user
      MYSQL_PASSWORD: 123456789
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: db-auth
    command: >
      --default-authentication-plugin=caching_sha2_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --skip-character-set-client-handshake
      --init-connect='SET NAMES utf8mb4'
      --innodb-buffer-pool-size=256M
      --max-connections=1000
    ports:
      - "3308:3306"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_data:/var/lib/mysql
    networks:
      - shop-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p123456789"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - shop-network
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./eureka-server/src/main/resources/application.properties:/app/config/application.properties
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    networks:
      - shop-network
    depends_on:
      eureka-server:
        condition: service_healthy
    volumes:
      - ./api-gateway/src/main/resources/application.properties:/app/config/application.properties

  auth-service:
    build:
      context: ./authentication-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8081:8081"
    networks:
      - shop-network
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
    volumes:
      - ./authentication-service/src/main/resources/application.properties:/app/config/application.properties

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "8082:8082"
    networks:
      - shop-network
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./product-service/src/main/resources/application.properties:/app/config/application.properties

  cart-service:
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    container_name: cart-service
    ports:
      - "8083:8083"
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - shop-network
    volumes:
      - ./cart-service/src/main/resources/application.properties:/app/config/application.properties

  invoice-service:
    build:
      context: ./invoice-service
      dockerfile: Dockerfile
    container_name: invoice-service
    ports:
      - "8084:8084"
    networks:
      - shop-network
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./invoice-service/src/main/resources/application.properties:/app/config/application.properties

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "8085:8085"
    networks:
      - shop-network
    depends_on:
      eureka-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./payment-service/src/main/resources/application.properties:/app/config/application.properties

  email-service:
    build:
      context: ./emailsender-service
      dockerfile: Dockerfile
    container_name: emailsender-service
    ports:
      - "8086:8086"
    networks:
      - shop-network
    depends_on:
      eureka-server:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./emailsender-service/src/main/resources/application.properties:/app/config/application.properties

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
    networks:
      - shop-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - shop-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  shop-network:
    driver: bridge
  microservices-network:
    driver: bridge

volumes:
  mysql_data: 