# Server Configuration
server.port=8085
spring.application.name=payment-service

# Database Configuration
spring.datasource.url=jdbc:mysql://mysql:3306/db-payment?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=123456789
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# VNPay Configuration
vnpay.pay-url=https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
vnpay.tmn-code=O1MB9N4N
vnpay.hash-secret=RQZDEXUNKRZIRQAFAPTSMFGFJVCHSGSG
vnpay.api-url=https://sandbox.vnpayment.vn/merchant_webapi/api/transaction
vnpay.version=2.1.0
vnpay.return-url=http://api-gateway:8080/payment/result

# JWT Configuration
projectjavasneaker.app.jwtSecret=shopShoes2024SecretKeyForJWTTokenGenerationMustBeLongEnoughForHS512Algorithm
projectjavasneaker.app.jwtExpirationMs=86400000

# Management & Actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# RabbitMQ Queues
payment.queue.name=payment-events
invoice.queue.name=invoice-events
email.queue.name=email-events

# Eureka Client Configuration
eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

# API Gateway URL
api.gateway.url=http://api-gateway:8080

# Logging Configuration
logging.level.org.springframework=INFO
logging.level.com.microservice=DEBUG

# RabbitMQ Configuration
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest


# Service URLs
service.invoice.url=http://invoice-service
service.email.url=http://email-service